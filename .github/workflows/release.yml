name: Release

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'

jobs:
  release_build:

    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Validate Gradle Wrapper
      uses: gradle/wrapper-validation-action@v1
    
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 17

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
           
    - name: Decode Keystore
      env:
        ENCODED_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}
        ENCODED_KEYSTORE_PROPERTIES: ${{ secrets.RELEASE_KEYSTORE_PROPERTIES }}

      run: bash .ci/decode_release_keystore.sh $ENCODED_KEYSTORE $ENCODED_KEYSTORE_PROPERTIES

    - name: Decode google services config
      env:
        ENCODED_GOOGLE_SERVICES_CONFIG: ${{ secrets.GOOGLE_SERVICES_CONFIG }}

      run: bash .ci/decode_google_services_config.sh $ENCODED_GOOGLE_SERVICES_CONFIG
      
    - name: Build Release apk
      run: ./gradlew assembleRelease
    
    - name: Build Release bundle
      run: ./gradlew bundleRelease
      
    - name: Upload Release Build to Artifacts
      uses: actions/upload-artifact@v3
      with:
           name: release-artifacts
           paths: |
             app/build/outputs/apk/release/
             app/build/outputs/bundle/release/
             
    - name: Create Github Release
      uses: softprops/action-gh-release@v1
      with:
           generate_release_notes: true
           prerelease: true
           files: |
             app/build/outputs/apk/release/app-release.apk
             app/build/outputs/bundle/release/app-release.aab
